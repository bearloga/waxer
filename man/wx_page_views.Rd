% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/traffic.R
\name{wx_page_views}
\alias{wx_page_views}
\title{Page view counts}
\usage{
wx_page_views(
  project,
  page_name,
  access_method = c("all", "desktop", "mobile web", "mobile app"),
  agent_type = c("all", "user", "bot"),
  granularity = c("daily", "monthly"),
  start_date = "20191101",
  end_date = "20191231",
  include_redirects = FALSE
)
}
\arguments{
\item{project}{The name of any Wikimedia project formatted like
\verb{\{language code\}.\{project name\}}, for example en.wikipedia. You \emph{may} pass
'en.wikipedia.org' and the .org will be stripped off. For projects without
language codes like Wikimedia Commons or MediaWiki, use
commons.wikimedia.org and mediawiki.org, respectively. This inclusion of
.org is especially important if including redirects, as the project's MW
API will need to be queried.}

\item{page_name}{The title of any article in the specified project.
The function takes care of replacing spaces with underscores and
URI-encoding, so that non-URI-safe characters like \%, / or ? are accepted
-- e.g. "Are You the One?" becomes "Are_You_the_One\%3F". Internally this
is done with a non-exported \code{wx_encode_page_name} function. If you need to
get the pageviews for multiple pages, you're encouraged to provide all the
page names at once as this function has been optimized for that use-case.}

\item{access_method}{If you want to filter by access method, use one of:
"desktop", "mobile app", or "mobile web". If you are interested in
pageviews regardless of access method, use "all" (default).}

\item{agent_type}{If you want to filter by agent type, use "user" or "bot".
If you are interested in pageviews regardless of agent type, use "all"
(default).}

\item{granularity}{The time unit for the response data. As of today,
supported values are daily (default) and monthly.}

\item{start_date}{The date of the first day to include, in YYYYMMDD format.
Can also be a \code{Date} or a \code{POSIXt} object, which will be auto-formatted.}

\item{end_date}{The date of the last day to include, in YYYYMMDD format.
Can also be a \code{Date} or a \code{POSIXt} object, which will be auto-formatted.}

\item{include_redirects}{Whether to include redirects to requested pages.
Currently, only article (mainspace) redirects are supported. See
"Redirects" section below for more details.}
}
\value{
A tibble data frame with the following columns:
\describe{
\item{\code{project}}{project}
\item{\code{page_name}}{the \code{page_name} provided by the user}
\item{\code{redirect_name}}{the name of the redirect to the page if \code{include_redirects = TRUE}; \code{NA} for the page itself}
\item{\code{date}}{\code{Date}; beginning of each month if \code{granularity = "monthly"}}
\item{\code{views}}{total number of views for the page}
}
}
\description{
Page view counts
}
\section{Redirects}{

By default \code{include_redirects = FALSE} for performance reasons. The
pageviews API does not roll up view counts for redirects into total view
counts of the target page, so set \code{include_redirects} to \code{TRUE} if you want
to have this function automatically locate the redirects via the MediaWiki
API and request their pageview counts. Obviously this makes the function
much slower, especially if the number of redirects to the page(s) is high.

For example, if the user visits "2019-20 coronavirus pandemic" (with a
minus) they will be redirected to the actual article "2019–20 coronavirus
pandemic" (with an en-dash). Any visits to the redirect (the page with the
minus sign instead of the en-dash) will not be counted toward the page view
count of the redirected-to article, although once the client is taken to the
target page that counts as a separate page view.

In some cases, you may want to include page views of the redirects in your
total or you may want to the ability to disentangle the portion of traffic
that is from users arriving to a page via a redirect vs. users arriving to
a page directly.

\strong{Note on performance}: again, the process of finding and fetching view
counts for redirects is considerably slower. The function has been optimized
for multiple pages, since the \href{https://www.mediawiki.org/wiki/API:Redirects}{redirects API}
supports up to 50 pages per call. Therefore, it is \emph{highly recommended} that
if you have multiple pages to retrieve traffic for within the same project,
try not to retrieve traffic for one page at a time but instead provide the
full vector of page names to minimize the burden on the MediaWiki API.
}

\section{License}{

Data retrieved from the API endpoint is available under the
\href{https://creativecommons.org/publicdomain/zero/1.0/}{CC0 1.0 license}.
}

\examples{
wx_page_views(
  "en.wikipedia",
  c("New Year's Eve", "New Year's Day"),
  start_date = "20191231",
  end_date = "20200101"
)
\dontrun{
wx_page_views(
  "en.wikipedia",
  "2019–20 coronavirus pandemic",
  start_date = "20200301",
  end_date = "20200501",
  include_redirects = TRUE
)
}
}
\seealso{
\itemize{
\item \href{https://meta.wikimedia.org/wiki/Research:Page_view}{meta:Reseach:Page view}
\item \href{https://wikitech.wikimedia.org/wiki/Analytics/AQS/Pageviews}{wikitech:Analytics/AQS/Pageviews}
}

Other {traffic data & metrics}: 
\code{\link{wx_project_views}()},
\code{\link{wx_top_viewed_pages}()},
\code{\link{wx_unique_devices}()}
}
\concept{{traffic data & metrics}}
